name: "sudoblark.github-actions.library/terraform/apply"
description: >-
  This template simply takes the artefact produced by the plan template and applies it.
  
  Intended to be used in conjunction with sudoblark.github-actions.library/terraform/plan.
author: "sudoblark"
inputs:
  terraform_version:
    description: "Semantic version of Terraform to utilise for the task."
    type: string
    required: true
  working_directory:
    description: "The working directory to utilise when performing the task."
    type: string
    required: true
  artefact:
    description: "Name of the artefact - produced by terraform/plan - which we wish to apply"
    type: string
    required: true
  aws_region:
    description: "AWS_DEFAULT_REGION value, required if the hashicorp/aws provider is utilised."
    type: string
    default: ""
    required: false
  aws_access_key:
    description: "AWS_ACCESS_KEY_ID value, required if the hashicorp/aws provider is utilised."
    type: string
    default: ""
    required: false
  aws_secret_access_key:
    description: "AWS_SECRET_ACCESS_KEY value, required if the hashicorp/aws provider is utilised."
    type: string
    default: ""
    required: false

runs:
  using: "composite"
  steps:
    - name: "Pull Hashicorp container"
      run: |
        docker pull hashicorp/terraform:${{ inputs.terraform_version }}
      shell: bash

    - name: "Terraform init"
      run: |
        docker run \
        -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
        -w ${{ inputs.working_directory }} \
        -e AWS_ACCESS_KEY_ID=${{ inputs.aws_access_key }} \
        -e AWS_SECRET_ACCESS_KEY=${{ inputs.aws_secret_access_key }} \
        -e AWS_DEFAULT_REGION=${{ inputs.aws_region }} \
        hashicorp/terraform:${{ inputs.terraform_version }} \
        init
      shell: bash

    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artefact }}

    - name: "Restore artefact"
      run: |
        cd ${{ inputs.working_directory }}
        mv $GITHUB_WORKSPACE/results.tar.gz ./
        ls -lr
      shell: bash

    - name: "Terraform apply"
      run: |
        docker run \
        -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
        -w ${{ inputs.working_directory }} \
        -e AWS_ACCESS_KEY_ID=${{ inputs.aws_access_key }} \
        -e AWS_SECRET_ACCESS_KEY=${{ inputs.aws_secret_access_key }} \
        -e AWS_DEFAULT_REGION=${{ inputs.aws_region }} \
        hashicorp/terraform:${{ inputs.terraform_version }} \
        apply ${{ inputs.working_directory }}/terraform.plan
      shell: bash
